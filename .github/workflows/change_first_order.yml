name: change_first_order

on: [push, workflow_dispatch]

permissions:
  contents: read

jobs:
  # formatting:
  #   name: Check Formatting
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: "3.11"
  #   - name: Install
  #     run: pip install ruff
  #   - name: Run Ruff
  #     run: ruff check .

  tests:
    name: Run Unit Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.11"] #["3.7", "3.11"]
        os: [ubuntu-latest] #[ubuntu-latest, windows-latest, macos-13]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install
      run: pip install ruff
    - name: Run Ruff
      run: ruff check .
    - name: Test a minimal install
      run: |
        pip install .
        python tests/test_minimal.py
    - name: Install Trimesh
      run: pip install .[easy,test]
    - name: Install pytest-ranking related
      run: pip install pytest-ranking pytest-json-report
    - name: Restore pytest-ranking cache
      id: restore-pytest-ranking-cache
      if: always()
      uses: actions/cache/restore@v4
      with:
        path: ${{ github.workspace }}/.pytest_cache/v/pytest_ranking_data
        key: pytest-ranking-cache-${{ github.workflow }}-${{ runner.os }}-${{ matrix.python }}
    - name: Run Pytest
      run: |
        pytest -v --durations=0 -k "not to_volume" --json-report --json-report-file=./test-report.json --rank --rank-weight=0-0-1
    - name: Save pytest-ranking cache
      id: save-pytest-ranking-cache
      if: always()
      uses: actions/cache/save@v4
      with:
        path: ${{ github.workspace }}/.pytest_cache/v/pytest_ranking_data
        key: pytest-ranking-cache-${{ github.workflow }}-${{ runner.os }}-${{ matrix.python }}-${{ github.run_id }}
    - uses: actions/upload-artifact@v3
      if: always()
      with:
          name: pytest-ranking upload test report json
          path: |
            ./test-report.json
  # docker:
  #   name: Run Tests In Docker
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Run Pytest In Docker
  #     run: make tests

  # corpus:
  #   runs-on: ubuntu-latest
  #   name: Check Corpus Loading
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Trimesh DiskCache
  #     id: cache-resolvers
  #     uses: actions/cache@v3
  #     with:
  #       path: ~/.trimesh-cache
  #       key: trimesh-cache
  #   - name: Set up Python 3.11
  #     uses: actions/setup-python@v4
  #     with:
  #        python-version: "3.11"
  #   - name: Install Trimesh
  #     run: pip install .[easy,test]
  #   - name: Run Corpus Check
  #     run: python tests/corpus.py
